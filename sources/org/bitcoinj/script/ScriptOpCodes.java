package org.bitcoinj.script;

import androidx.exifinterface.media.ExifInterface;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableMap.Builder;
import com.leanplum.core.BuildConfig;
import java.util.Map;

public class ScriptOpCodes {
    public static final int OP_0 = 0;
    public static final int OP_0NOTEQUAL = 146;
    public static final int OP_1 = 81;
    public static final int OP_10 = 90;
    public static final int OP_11 = 91;
    public static final int OP_12 = 92;
    public static final int OP_13 = 93;
    public static final int OP_14 = 94;
    public static final int OP_15 = 95;
    public static final int OP_16 = 96;
    public static final int OP_1ADD = 139;
    public static final int OP_1NEGATE = 79;
    public static final int OP_1SUB = 140;
    public static final int OP_2 = 82;
    public static final int OP_2DIV = 142;
    public static final int OP_2DROP = 109;
    public static final int OP_2DUP = 110;
    public static final int OP_2MUL = 141;
    public static final int OP_2OVER = 112;
    public static final int OP_2ROT = 113;
    public static final int OP_2SWAP = 114;
    public static final int OP_3 = 83;
    public static final int OP_3DUP = 111;
    public static final int OP_4 = 84;
    public static final int OP_5 = 85;
    public static final int OP_6 = 86;
    public static final int OP_7 = 87;
    public static final int OP_8 = 88;
    public static final int OP_9 = 89;
    public static final int OP_ABS = 144;
    public static final int OP_ADD = 147;
    public static final int OP_AND = 132;
    public static final int OP_BOOLAND = 154;
    public static final int OP_BOOLOR = 155;
    public static final int OP_CAT = 126;
    public static final int OP_CHECKLOCKTIMEVERIFY = 177;
    public static final int OP_CHECKMULTISIG = 174;
    public static final int OP_CHECKMULTISIGVERIFY = 175;
    public static final int OP_CHECKSIG = 172;
    public static final int OP_CHECKSIGVERIFY = 173;
    public static final int OP_CODESEPARATOR = 171;
    public static final int OP_DEPTH = 116;
    public static final int OP_DIV = 150;
    public static final int OP_DROP = 117;
    public static final int OP_DUP = 118;
    public static final int OP_ELSE = 103;
    public static final int OP_ENDIF = 104;
    public static final int OP_EQUAL = 135;
    public static final int OP_EQUALVERIFY = 136;
    public static final int OP_FALSE = 0;
    public static final int OP_FROMALTSTACK = 108;
    public static final int OP_GREATERTHAN = 160;
    public static final int OP_GREATERTHANOREQUAL = 162;
    public static final int OP_HASH160 = 169;
    public static final int OP_HASH256 = 170;
    public static final int OP_IF = 99;
    public static final int OP_IFDUP = 115;
    public static final int OP_INVALIDOPCODE = 255;
    public static final int OP_INVERT = 131;
    public static final int OP_LEFT = 128;
    public static final int OP_LESSTHAN = 159;
    public static final int OP_LESSTHANOREQUAL = 161;
    public static final int OP_LSHIFT = 152;
    public static final int OP_MAX = 164;
    public static final int OP_MIN = 163;
    public static final int OP_MOD = 151;
    public static final int OP_MUL = 149;
    public static final int OP_NEGATE = 143;
    public static final int OP_NIP = 119;
    public static final int OP_NOP = 97;
    public static final int OP_NOP1 = 176;
    public static final int OP_NOP10 = 185;
    @Deprecated
    public static final int OP_NOP2 = 177;
    public static final int OP_NOP3 = 178;
    public static final int OP_NOP4 = 179;
    public static final int OP_NOP5 = 180;
    public static final int OP_NOP6 = 181;
    public static final int OP_NOP7 = 182;
    public static final int OP_NOP8 = 183;
    public static final int OP_NOP9 = 184;
    public static final int OP_NOT = 145;
    public static final int OP_NOTIF = 100;
    public static final int OP_NUMEQUAL = 156;
    public static final int OP_NUMEQUALVERIFY = 157;
    public static final int OP_NUMNOTEQUAL = 158;
    public static final int OP_OR = 133;
    public static final int OP_OVER = 120;
    public static final int OP_PICK = 121;
    public static final int OP_PUSHDATA1 = 76;
    public static final int OP_PUSHDATA2 = 77;
    public static final int OP_PUSHDATA4 = 78;
    public static final int OP_RESERVED = 80;
    public static final int OP_RESERVED1 = 137;
    public static final int OP_RESERVED2 = 138;
    public static final int OP_RETURN = 106;
    public static final int OP_RIGHT = 129;
    public static final int OP_RIPEMD160 = 166;
    public static final int OP_ROLL = 122;
    public static final int OP_ROT = 123;
    public static final int OP_RSHIFT = 153;
    public static final int OP_SHA1 = 167;
    public static final int OP_SHA256 = 168;
    public static final int OP_SIZE = 130;
    public static final int OP_SUB = 148;
    public static final int OP_SUBSTR = 127;
    public static final int OP_SWAP = 124;
    public static final int OP_TOALTSTACK = 107;
    public static final int OP_TRUE = 81;
    public static final int OP_TUCK = 125;
    public static final int OP_VER = 98;
    public static final int OP_VERIF = 101;
    public static final int OP_VERIFY = 105;
    public static final int OP_VERNOTIF = 102;
    public static final int OP_WITHIN = 165;
    public static final int OP_XOR = 134;
    private static final Map<Integer, String> opCodeMap;
    private static final Map<String, Integer> opCodeNameMap;

    static {
        Builder builder = ImmutableMap.builder();
        Integer valueOf = Integer.valueOf(0);
        String str = BuildConfig.BUILD_NUMBER;
        Builder put = builder.put(valueOf, str);
        Integer valueOf2 = Integer.valueOf(76);
        String str2 = "PUSHDATA1";
        Builder put2 = put.put(valueOf2, str2);
        Integer valueOf3 = Integer.valueOf(77);
        String str3 = "PUSHDATA2";
        Builder put3 = put2.put(valueOf3, str3);
        Integer valueOf4 = Integer.valueOf(78);
        String str4 = "PUSHDATA4";
        Builder put4 = put3.put(valueOf4, str4);
        Integer valueOf5 = Integer.valueOf(79);
        String str5 = "1NEGATE";
        Builder put5 = put4.put(valueOf5, str5);
        Integer valueOf6 = Integer.valueOf(80);
        String str6 = "RESERVED";
        String str7 = "1";
        Builder put6 = put5.put(valueOf6, str6).put(Integer.valueOf(81), str7).put(Integer.valueOf(82), ExifInterface.GPS_MEASUREMENT_2D).put(Integer.valueOf(83), ExifInterface.GPS_MEASUREMENT_3D).put(Integer.valueOf(84), "4").put(Integer.valueOf(85), "5").put(Integer.valueOf(86), "6").put(Integer.valueOf(87), "7").put(Integer.valueOf(88), "8").put(Integer.valueOf(89), "9").put(Integer.valueOf(90), "10").put(Integer.valueOf(91), "11").put(Integer.valueOf(92), "12").put(Integer.valueOf(93), "13").put(Integer.valueOf(94), "14").put(Integer.valueOf(95), "15").put(Integer.valueOf(96), "16").put(Integer.valueOf(97), "NOP").put(Integer.valueOf(98), "VER").put(Integer.valueOf(99), "IF").put(Integer.valueOf(100), "NOTIF").put(Integer.valueOf(101), "VERIF").put(Integer.valueOf(102), "VERNOTIF").put(Integer.valueOf(103), "ELSE").put(Integer.valueOf(104), "ENDIF").put(Integer.valueOf(105), "VERIFY").put(Integer.valueOf(106), "RETURN").put(Integer.valueOf(107), "TOALTSTACK").put(Integer.valueOf(108), "FROMALTSTACK").put(Integer.valueOf(109), "2DROP").put(Integer.valueOf(110), "2DUP").put(Integer.valueOf(111), "3DUP").put(Integer.valueOf(112), "2OVER").put(Integer.valueOf(113), "2ROT").put(Integer.valueOf(114), "2SWAP").put(Integer.valueOf(115), "IFDUP").put(Integer.valueOf(116), "DEPTH").put(Integer.valueOf(117), "DROP").put(Integer.valueOf(118), "DUP").put(Integer.valueOf(119), "NIP").put(Integer.valueOf(120), "OVER").put(Integer.valueOf(121), "PICK").put(Integer.valueOf(122), "ROLL").put(Integer.valueOf(123), "ROT").put(Integer.valueOf(124), "SWAP").put(Integer.valueOf(125), "TUCK").put(Integer.valueOf(126), "CAT").put(Integer.valueOf(127), "SUBSTR").put(Integer.valueOf(128), "LEFT").put(Integer.valueOf(OP_RIGHT), "RIGHT").put(Integer.valueOf(OP_SIZE), "SIZE").put(Integer.valueOf(OP_INVERT), "INVERT").put(Integer.valueOf(132), "AND").put(Integer.valueOf(133), "OR").put(Integer.valueOf(134), "XOR").put(Integer.valueOf(135), "EQUAL").put(Integer.valueOf(136), "EQUALVERIFY").put(Integer.valueOf(137), "RESERVED1").put(Integer.valueOf(138), "RESERVED2").put(Integer.valueOf(139), "1ADD").put(Integer.valueOf(140), "1SUB").put(Integer.valueOf(141), "2MUL").put(Integer.valueOf(142), "2DIV").put(Integer.valueOf(143), "NEGATE").put(Integer.valueOf(144), "ABS").put(Integer.valueOf(145), "NOT").put(Integer.valueOf(146), "0NOTEQUAL").put(Integer.valueOf(147), "ADD").put(Integer.valueOf(148), "SUB").put(Integer.valueOf(149), "MUL").put(Integer.valueOf(150), "DIV").put(Integer.valueOf(151), "MOD").put(Integer.valueOf(152), "LSHIFT").put(Integer.valueOf(153), "RSHIFT").put(Integer.valueOf(154), "BOOLAND").put(Integer.valueOf(155), "BOOLOR").put(Integer.valueOf(156), "NUMEQUAL").put(Integer.valueOf(157), "NUMEQUALVERIFY").put(Integer.valueOf(158), "NUMNOTEQUAL").put(Integer.valueOf(159), "LESSTHAN").put(Integer.valueOf(160), "GREATERTHAN").put(Integer.valueOf(161), "LESSTHANOREQUAL").put(Integer.valueOf(162), "GREATERTHANOREQUAL").put(Integer.valueOf(163), "MIN").put(Integer.valueOf(164), "MAX").put(Integer.valueOf(165), "WITHIN").put(Integer.valueOf(166), "RIPEMD160").put(Integer.valueOf(167), "SHA1").put(Integer.valueOf(168), "SHA256").put(Integer.valueOf(169), "HASH160").put(Integer.valueOf(170), "HASH256").put(Integer.valueOf(171), "CODESEPARATOR").put(Integer.valueOf(172), "CHECKSIG").put(Integer.valueOf(173), "CHECKSIGVERIFY").put(Integer.valueOf(174), "CHECKMULTISIG").put(Integer.valueOf(175), "CHECKMULTISIGVERIFY").put(Integer.valueOf(176), "NOP1");
        Integer valueOf7 = Integer.valueOf(177);
        Integer num = valueOf7;
        opCodeMap = put6.put(valueOf7, "CHECKLOCKTIMEVERIFY").put(Integer.valueOf(178), "NOP3").put(Integer.valueOf(179), "NOP4").put(Integer.valueOf(180), "NOP5").put(Integer.valueOf(181), "NOP6").put(Integer.valueOf(182), "NOP7").put(Integer.valueOf(183), "NOP8").put(Integer.valueOf(184), "NOP9").put(Integer.valueOf(185), "NOP10").build();
        String str8 = "4";
        String str9 = "5";
        String str10 = "6";
        String str11 = "7";
        String str12 = "8";
        String str13 = "9";
        String str14 = "10";
        String str15 = "11";
        String str16 = "12";
        String str17 = "13";
        String str18 = "14";
        String str19 = "15";
        String str20 = "16";
        String str21 = "NOP";
        String str22 = "VER";
        String str23 = "IF";
        String str24 = "NOTIF";
        String str25 = "VERIF";
        String str26 = "VERNOTIF";
        String str27 = "ELSE";
        String str28 = "ENDIF";
        String str29 = "VERIFY";
        String str30 = "RETURN";
        String str31 = "TOALTSTACK";
        String str32 = "FROMALTSTACK";
        String str33 = "2DROP";
        String str34 = "2DUP";
        String str35 = "3DUP";
        String str36 = "2OVER";
        String str37 = "2ROT";
        String str38 = "2SWAP";
        String str39 = "IFDUP";
        String str40 = "DEPTH";
        String str41 = "DROP";
        String str42 = "DUP";
        String str43 = "NIP";
        String str44 = "OVER";
        String str45 = "PICK";
        String str46 = "ROLL";
        String str47 = "ROT";
        String str48 = "SWAP";
        String str49 = "TUCK";
        String str50 = "CAT";
        String str51 = "SUBSTR";
        String str52 = "LEFT";
        String str53 = "RIGHT";
        String str54 = "SIZE";
        String str55 = "INVERT";
        String str56 = "AND";
        String str57 = "OR";
        String str58 = "XOR";
        String str59 = "EQUAL";
        String str60 = "EQUALVERIFY";
        String str61 = "RESERVED1";
        String str62 = "RESERVED2";
        String str63 = "1ADD";
        String str64 = "1SUB";
        String str65 = "2MUL";
        String str66 = "2DIV";
        String str67 = "NEGATE";
        String str68 = "ABS";
        String str69 = "NOT";
        String str70 = "0NOTEQUAL";
        String str71 = "ADD";
        String str72 = "SUB";
        String str73 = "MUL";
        String str74 = "DIV";
        String str75 = "MOD";
        String str76 = "LSHIFT";
        String str77 = "RSHIFT";
        String str78 = "BOOLAND";
        String str79 = "BOOLOR";
        String str80 = "NUMEQUAL";
        String str81 = "NUMEQUALVERIFY";
        String str82 = "NUMNOTEQUAL";
        String str83 = "LESSTHAN";
        String str84 = "GREATERTHAN";
        String str85 = "LESSTHANOREQUAL";
        String str86 = "GREATERTHANOREQUAL";
        String str87 = "MIN";
        String str88 = "MAX";
        String str89 = "WITHIN";
        String str90 = "RIPEMD160";
        String str91 = "SHA1";
        String str92 = "SHA256";
        String str93 = "HASH160";
        String str94 = "HASH256";
        String str95 = "CODESEPARATOR";
        String str96 = "CHECKSIG";
        String str97 = "CHECKSIGVERIFY";
        String str98 = "CHECKMULTISIG";
        String str99 = "CHECKMULTISIGVERIFY";
        String str100 = "NOP1";
        Integer num2 = num;
        String str101 = "NOP3";
        String str102 = "NOP4";
        String str103 = "NOP5";
        String str104 = "NOP6";
        String str105 = "NOP7";
        String str106 = "NOP8";
        String str107 = "NOP9";
        String str108 = "NOP10";
        opCodeNameMap = ImmutableMap.builder().put(str, valueOf).put(str2, valueOf2).put(str3, valueOf3).put(str4, valueOf4).put(str5, valueOf5).put(str6, valueOf6).put(str7, Integer.valueOf(81)).put(ExifInterface.GPS_MEASUREMENT_2D, Integer.valueOf(82)).put(ExifInterface.GPS_MEASUREMENT_3D, Integer.valueOf(83)).put(str8, Integer.valueOf(84)).put(str9, Integer.valueOf(85)).put(str10, Integer.valueOf(86)).put(str11, Integer.valueOf(87)).put(str12, Integer.valueOf(88)).put(str13, Integer.valueOf(89)).put(str14, Integer.valueOf(90)).put(str15, Integer.valueOf(91)).put(str16, Integer.valueOf(92)).put(str17, Integer.valueOf(93)).put(str18, Integer.valueOf(94)).put(str19, Integer.valueOf(95)).put(str20, Integer.valueOf(96)).put(str21, Integer.valueOf(97)).put(str22, Integer.valueOf(98)).put(str23, Integer.valueOf(99)).put(str24, Integer.valueOf(100)).put(str25, Integer.valueOf(101)).put(str26, Integer.valueOf(102)).put(str27, Integer.valueOf(103)).put(str28, Integer.valueOf(104)).put(str29, Integer.valueOf(105)).put(str30, Integer.valueOf(106)).put(str31, Integer.valueOf(107)).put(str32, Integer.valueOf(108)).put(str33, Integer.valueOf(109)).put(str34, Integer.valueOf(110)).put(str35, Integer.valueOf(111)).put(str36, Integer.valueOf(112)).put(str37, Integer.valueOf(113)).put(str38, Integer.valueOf(114)).put(str39, Integer.valueOf(115)).put(str40, Integer.valueOf(116)).put(str41, Integer.valueOf(117)).put(str42, Integer.valueOf(118)).put(str43, Integer.valueOf(119)).put(str44, Integer.valueOf(120)).put(str45, Integer.valueOf(121)).put(str46, Integer.valueOf(122)).put(str47, Integer.valueOf(123)).put(str48, Integer.valueOf(124)).put(str49, Integer.valueOf(125)).put(str50, Integer.valueOf(126)).put(str51, Integer.valueOf(127)).put(str52, Integer.valueOf(128)).put(str53, Integer.valueOf(OP_RIGHT)).put(str54, Integer.valueOf(OP_SIZE)).put(str55, Integer.valueOf(OP_INVERT)).put(str56, Integer.valueOf(132)).put(str57, Integer.valueOf(133)).put(str58, Integer.valueOf(134)).put(str59, Integer.valueOf(135)).put(str60, Integer.valueOf(136)).put(str61, Integer.valueOf(137)).put(str62, Integer.valueOf(138)).put(str63, Integer.valueOf(139)).put(str64, Integer.valueOf(140)).put(str65, Integer.valueOf(141)).put(str66, Integer.valueOf(142)).put(str67, Integer.valueOf(143)).put(str68, Integer.valueOf(144)).put(str69, Integer.valueOf(145)).put(str70, Integer.valueOf(146)).put(str71, Integer.valueOf(147)).put(str72, Integer.valueOf(148)).put(str73, Integer.valueOf(149)).put(str74, Integer.valueOf(150)).put(str75, Integer.valueOf(151)).put(str76, Integer.valueOf(152)).put(str77, Integer.valueOf(153)).put(str78, Integer.valueOf(154)).put(str79, Integer.valueOf(155)).put(str80, Integer.valueOf(156)).put(str81, Integer.valueOf(157)).put(str82, Integer.valueOf(158)).put(str83, Integer.valueOf(159)).put(str84, Integer.valueOf(160)).put(str85, Integer.valueOf(161)).put(str86, Integer.valueOf(162)).put(str87, Integer.valueOf(163)).put(str88, Integer.valueOf(164)).put(str89, Integer.valueOf(165)).put(str90, Integer.valueOf(166)).put(str91, Integer.valueOf(167)).put(str92, Integer.valueOf(168)).put(str93, Integer.valueOf(169)).put(str94, Integer.valueOf(170)).put(str95, Integer.valueOf(171)).put(str96, Integer.valueOf(172)).put(str97, Integer.valueOf(173)).put(str98, Integer.valueOf(174)).put(str99, Integer.valueOf(175)).put(str100, Integer.valueOf(176)).put("CHECKLOCKTIMEVERIFY", num2).put("NOP2", num2).put(str101, Integer.valueOf(178)).put(str102, Integer.valueOf(179)).put(str103, Integer.valueOf(180)).put(str104, Integer.valueOf(181)).put(str105, Integer.valueOf(182)).put(str106, Integer.valueOf(183)).put(str107, Integer.valueOf(184)).put(str108, Integer.valueOf(185)).build();
    }

    public static String getOpCodeName(int i) {
        if (opCodeMap.containsKey(Integer.valueOf(i))) {
            return (String) opCodeMap.get(Integer.valueOf(i));
        }
        StringBuilder sb = new StringBuilder();
        sb.append("NON_OP(");
        sb.append(i);
        sb.append(")");
        return sb.toString();
    }

    public static String getPushDataName(int i) {
        if (opCodeMap.containsKey(Integer.valueOf(i))) {
            return (String) opCodeMap.get(Integer.valueOf(i));
        }
        StringBuilder sb = new StringBuilder();
        sb.append("PUSHDATA(");
        sb.append(i);
        sb.append(")");
        return sb.toString();
    }

    public static int getOpCode(String str) {
        if (opCodeNameMap.containsKey(str)) {
            return ((Integer) opCodeNameMap.get(str)).intValue();
        }
        return 255;
    }
}
